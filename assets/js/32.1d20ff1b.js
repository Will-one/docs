(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{576:function(t,_,v){"use strict";v.r(_);var a=v(10),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"}),v("p",[v("a",{attrs:{href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 文档"),v("OutboundLink")],1)])]),v("h2",{attrs:{id:"常规"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常规"}},[t._v("#")]),t._v(" 常规")]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"_1-clone"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-clone"}},[t._v("#")]),t._v(" 1.clone")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("git clone url")]),t._v("  得到项目的拷贝")]),t._v(" "),v("li",[v("code",[t._v("git clone git..@.....df..")]),t._v(" 克隆主干")]),t._v(" "),v("li",[v("code",[t._v("git clone -b 分支名 git..@.....df..")]),t._v("   克隆分支")])]),t._v(" "),v("h3",{attrs:{id:"_2-merge"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-merge"}},[t._v("#")]),t._v(" 2.merge")]),t._v(" "),v("ul",[v("li",[t._v("将一个分支 merge 到另一个分支（进入本地分支），将分支名(远程)的内容 merge 到本地的分支上。")]),t._v(" "),v("li",[v("code",[t._v("git merge 分支名（远程）")])]),t._v(" "),v("li",[t._v("有提示信息的话(和vim一样)，按 :q 退出提示信息，然后在 git push 推送到远程")])]),t._v(" "),v("h3",{attrs:{id:"_3-add"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-add"}},[t._v("#")]),t._v(" 3.add")]),t._v(" "),v("ul",[v("li",[t._v("新增或者修改的文件提交为待修改状态")]),t._v(" "),v("li",[v("code",[t._v("git add 文件路径")])]),t._v(" "),v("li",[v("code",[t._v("git add .")]),t._v(" （全部提交）")])]),t._v(" "),v("h3",{attrs:{id:"_4-commit"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-commit"}},[t._v("#")]),t._v(" 4.commit")]),t._v(" "),v("ul",[v("li",[t._v("将待提交文件提交到本地仓库")]),t._v(" "),v("li",[v("code",[t._v('git commit -m "提交说明"')])])]),t._v(" "),v("h3",{attrs:{id:"_5-push"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-push"}},[t._v("#")]),t._v(" 5.push")]),t._v(" "),v("ul",[v("li",[t._v("将本地仓库的 commit 提交到远程仓库")]),t._v(" "),v("li",[v("code",[t._v("git push")])])]),t._v(" "),v("h3",{attrs:{id:"_6-pull"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-pull"}},[t._v("#")]),t._v(" 6.pull")]),t._v(" "),v("ul",[v("li",[t._v("拉取远程仓库中的代码，更新本地代码")]),t._v(" "),v("li",[v("code",[t._v("git pull")])])]),t._v(" "),v("p",[t._v("强制覆盖本地代码")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("git fetch --all")])]),t._v(" "),v("li",[v("code",[t._v("git reset --hard origin／master最后分支名")])]),t._v(" "),v("li",[v("code",[t._v("git pull")])])]),t._v(" "),v("h2",{attrs:{id:"放弃本地修改"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#放弃本地修改"}},[t._v("#")]),t._v(" 放弃本地修改")]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"_1-未git-add-缓存代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-未git-add-缓存代码"}},[t._v("#")]),t._v(" 1.未git add 缓存代码")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("git checkout -- filepath")])]),t._v(" "),v("li",[v("code",[t._v("git checkout .")]),t._v("  放弃所有")])]),t._v(" "),v("h3",{attrs:{id:"_2-已经git-add-缓存代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-已经git-add-缓存代码"}},[t._v("#")]),t._v(" 2.已经git add 缓存代码")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("git reset HEAD filepathname")])]),t._v(" "),v("li",[v("code",[t._v("git reset HEAD .")])])]),t._v(" "),v("h3",{attrs:{id:"_3-已经git-commit-提交了代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-已经git-commit-提交了代码"}},[t._v("#")]),t._v(" 3.已经git commit 提交了代码")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("回退操作")]),t._v(" "),v("th",[t._v("选项说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("git reset --soft HEAD^")]),t._v(" 回退至上一次")]),t._v(" "),v("td",[t._v("--hard 删掉改动的代码，撤销git add")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git reset --soft HEAD~3")]),t._v(" 回退至3次前")]),t._v(" "),v("td",[t._v("--soft 不删除改动代码，不撤销git add")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git reset --soft commitId")]),t._v(" 回退至任意版本（git log查看）")]),t._v(" "),v("td",[t._v("--mixed 不删除改动代码，撤销git add（默认值）")])])])]),t._v(" "),v("h2",{attrs:{id:"新建、同步和查看"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新建、同步和查看"}},[t._v("#")]),t._v(" 新建、同步和查看")]),t._v(" "),v("h3",{attrs:{id:"_1-查看"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看"}},[t._v("#")]),t._v(" 1.查看")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("命令")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("git status")])]),t._v(" "),v("td",[t._v("查看分支状态。修改，添加，删除，commit都有显示")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git diff 具体修改")])]),t._v(" "),v("td",[t._v("查看具体修改的代码")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git branch")])]),t._v(" "),v("td",[t._v("查看当前本地分支，加 "),v("code",[t._v("-a")]),t._v(" 选项查看全部本地和远程分支")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git log")])]),t._v(" "),v("td",[t._v("列出分支的修改记录，每条记录都有commitID")])])])]),t._v(" "),v("h3",{attrs:{id:"_2-新建并同步"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-新建并同步"}},[t._v("#")]),t._v(" 2.新建并同步")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("命令")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("git checkout -b 新分支名")])]),t._v(" "),v("td",[t._v("新建并切换到新分支下")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git branch 新分支名")])]),t._v(" "),v("td",[t._v("本地新建一个分支")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git push --set-upstream origin 新分支名")])]),t._v(" "),v("td",[t._v("将本地新建的分支推送到远程")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git push origin 分支名")])]),t._v(" "),v("td",[t._v("需要将本地的修改推送的远程库中（不一定需要）")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git remote update origin --prune")])]),t._v(" "),v("td",[t._v("更新远程源（新建分支后，本地 git branch -a 不显示新分支，显示后q退出）刷新本地和远程同步（不一定需要）")])])])]),t._v(" "),v("h3",{attrs:{id:"_3-删除本地分支"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除本地分支"}},[t._v("#")]),t._v(" 3.删除本地分支")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("命令")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("git branch -d 本地分支名")])]),t._v(" "),v("td",[t._v("删除本地分支")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git branch -D 本地分支名")])]),t._v(" "),v("td",[t._v("强制删除本地分支")])])])]),t._v(" "),v("h2",{attrs:{id:"merge申请后继续提交"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#merge申请后继续提交"}},[t._v("#")]),t._v(" merge申请后继续提交")]),t._v(" "),v("hr"),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("命令")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v('git commit --amend -m "说明"')])]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git push")])]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[v("code",[t._v("git push --force")])]),t._v(" "),v("td",[t._v("如果rejected")])])])]),t._v(" "),v("h2",{attrs:{id:"未提交想切换分支"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#未提交想切换分支"}},[t._v("#")]),t._v(" 未提交想切换分支")]),t._v(" "),v("hr"),t._v(" "),v("ul",[v("li",[v("code",[t._v("git stash")]),t._v(" 隐藏代码")]),t._v(" "),v("li",[v("code",[t._v("git stash pop")]),t._v(" 取消代码隐藏")])])])}),[],!1,null,null,null);_.default=e.exports}}]);