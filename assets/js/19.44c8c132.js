(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{562:function(a,t,s){"use strict";s.r(t);var e=s(10),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"一些基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些基础"}},[a._v("#")]),a._v(" 一些基础")]),a._v(" "),s("p",[a._v("JDK = JRE + 开发工具集（例如javac编译工具等）\nJRE = JVM + Java SE标准类库")]),a._v(" "),s("h2",{attrs:{id:"p37-注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p37-注释"}},[a._v("#")]),a._v(" P37 注释")]),a._v(" "),s("ul",[s("li",[a._v("文档注释（java特有）")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n@author willone\n@version 1.0.0\n*/")]),a._v("\n")])])]),s("ul",[s("li",[a._v("注释内容可以被JDK提供的工具javadoc解析，生成一套以网页形式体现的该程序的说明文档。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("javadoc -d mydoc -author -version hello.java\n")])])]),s("ul",[s("li",[a._v("执行命令中文报错的可以")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("javadoc -d mydoc -encoding utf-8 -author -version hello.java\n")])])]),s("h2",{attrs:{id:"p38-java程序的一些基本知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p38-java程序的一些基本知识"}},[a._v("#")]),a._v(" P38 java程序的一些基本知识")]),a._v(" "),s("ul",[s("li",[a._v('编写：java代码保存在 ".java" 结尾的源文件中')]),a._v(" "),s("li",[a._v("编译：使用 javac.exe 命令编译我们的java源文件。格式：javac 源文件名.java")]),a._v(" "),s("li",[a._v("运行：使用 java.exe 命令解释运行我们的字节码文件。格式：java 类名")])]),a._v(" "),s("p",[a._v("注意点：")]),a._v(" "),s("ul",[s("li",[a._v("在一个java源文件中可以声明多个class。但是，至多只有一个类声明为public")]),a._v(" "),s("li",[a._v("而且声明为public的类的类名必须与原文件名相同。")])]),a._v(" "),s("p",[a._v("程序的入口是main()方法")]),a._v(" "),s("h2",{attrs:{id:"p47-java中的名称命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p47-java中的名称命名规范"}},[a._v("#")]),a._v(" P47 java中的名称命名规范")]),a._v(" "),s("ul",[s("li",[a._v("包名：多单词组成时所有单词都小写：xxxyyyzzz")]),a._v(" "),s("li",[a._v("类名、接口名：多单词组成时，所有单词的首字母大写（大驼峰）：XxxYyyZzz")]),a._v(" "),s("li",[a._v("变量名、方法名：多个单词组成时（小驼峰）：xxxYyyZzz")]),a._v(" "),s("li",[a._v("常量名：所有字母大写，多单词时每个单词用下划线连接：XXX_YYY_ZZZ")])]),a._v(" "),s("h2",{attrs:{id:"p50-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p50-数据类型"}},[a._v("#")]),a._v(" P50 数据类型")]),a._v(" "),s("ol",[s("li",[a._v("基本数据类型【primitive type】\n"),s("ul",[s("li",[a._v("数值型\n"),s("ul",[s("li",[a._v("整数类型（byte，short，int，long）")]),a._v(" "),s("li",[a._v("浮点类型（float，double）")])])]),a._v(" "),s("li",[a._v("字符型（char）")]),a._v(" "),s("li",[a._v("布尔型（boolean）")])])]),a._v(" "),s("li",[a._v("引用数据类型【reference type】\n"),s("ul",[s("li",[a._v("类（class）")]),a._v(" "),s("li",[a._v("接口（interface）")]),a._v(" "),s("li",[a._v("数组（[]）")])])])]),a._v(" "),s("h2",{attrs:{id:"p51-整型变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p51-整型变量"}},[a._v("#")]),a._v(" P51 整型变量")]),a._v(" "),s("ul",[s("li",[a._v("byte（1字节=8bit）=》范围：-128 ~ 127")]),a._v(" "),s("li",[a._v("short（2字节）")]),a._v(" "),s("li",[a._v("int（4字节）")]),a._v(" "),s("li",[a._v("long（8字节）")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 长整型要用大写L或者小写l结尾")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" lparam "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("38274247L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"p52-浮点型变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p52-浮点型变量"}},[a._v("#")]),a._v(" P52 浮点型变量")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("浮点型常量有两种表示形式\n十进制数形式：5.12  512.0f  .512\n科学计数法形式：5.12e2  512E2")])]),a._v(" "),s("li",[s("p",[a._v("float：单精度，尾数可以精确到7位有效数字，很多情况下，精度很难满足要求。")]),a._v(" "),s("ul",[s("li",[a._v("4字节：-3.403E38 ~ 3.403E38")])])]),a._v(" "),s("li",[s("p",[a._v("double：双精度，精度是float的两倍。通常采用此类型。")]),a._v(" "),s("ul",[s("li",[a._v("8字节：-1.798E308 ~ 1.798E308")])])]),a._v(" "),s("li",[s("p",[a._v("Java的浮点型常量默认为double型，声明float型常量，需要在后面加'f'或者'F'")])])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" fNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("435.342F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"p53-字符类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p53-字符类型"}},[a._v("#")]),a._v(" P53 字符类型")]),a._v(" "),s("ul",[s("li",[a._v("定义char型变量，通常使用''，内部只能写一个字符")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),a._v(" c1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// char c2 = 'ab'; //编译不通过，要用字符串")]),a._v("\n")])])]),s("ul",[s("li",[a._v("表示方式：1.声明一个字符 2.转义字符 3. Unicode")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),a._v(" c5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),a._v(" c6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\u0043'")]),a._v("\n")])])]),s("h2",{attrs:{id:"p55-boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p55-boolean"}},[a._v("#")]),a._v(" P55 boolean")]),a._v(" "),s("p",[a._v("true false")]),a._v(" "),s("h2",{attrs:{id:"p56-p57-自动类型提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p56-p57-自动类型提升"}},[a._v("#")]),a._v(" P56-P57 自动类型提升")]),a._v(" "),s("ul",[s("li",[a._v("自动类型转换：容量小的类型 自动转换为 容量大的数据类型。\n"),s("ul",[s("li",[a._v("（char，byte，short）-> int -> long -> float -> double")])])]),a._v(" "),s("li",[a._v("有多种类型的数据混合运算时，系统首先自动将所有数据转换成容量最大的那种数据类型，然后再进行计算。\n"),s("ul",[s("li",[a._v("byte,short,char之间不会相互转换，他们三者在计算式首先转换为int类型。")]),a._v(" "),s("li",[a._v("boolean 类型不能与其他数据类型运算")]),a._v(" "),s("li",[a._v("当把任何基本数据类型的值和字符串（String）进行连接运算时（+），基本数据类型的值将自动转换为字符串（String）类型。")])])])]),a._v(" "),s("h2",{attrs:{id:"p58-强制类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p58-强制类型转换"}},[a._v("#")]),a._v(" P58 强制类型转换")]),a._v(" "),s("ul",[s("li",[a._v("使用强转符：(类型)变量")]),a._v(" "),s("li",[a._v("注意点：强制类型转换，可能导致精度损失")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 精度损失")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" d1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12.9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("d1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 12")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 没有精度损失")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" l1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("123")]),a._v("；\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("short")]),a._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" （"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("short")]),a._v("）l1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 123")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 精度损失举例2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("128")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("i2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// -128")]),a._v("\n")])])]),s("ul",[s("li",[a._v("几个特殊情况")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 整型常量，默认类型为int型")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 浮点型常量，默认类型是double")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 编码情况1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" l "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12323")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 没有在最后加L，所以编译器先将值作为int，然后变量提升")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//long l = 43782734929874927847924; // 值太大，int装不下，报错")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 编码情况2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" f1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 12.3默认作为double型，不能自动保存为float，报错")]),a._v("\n")])])]),s("h2",{attrs:{id:"p60-p62-string-的介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p60-p62-string-的介绍"}},[a._v("#")]),a._v(" P60-P62 String 的介绍")]),a._v(" "),s("ul",[s("li",[a._v("String 不是基本数据类型，属于引用数据类型")]),a._v(" "),s("li",[a._v('使用方式与基本数据类型一致。例如：String str = "abcd";')]),a._v(" "),s("li",[a._v("一个字符串可以串接另一个字符串，也可以直接串接其他类型的数据")])]),a._v(" "),s("h1",{attrs:{id:"p63-p67-进制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p63-p67-进制"}},[a._v("#")]),a._v(" P63-P67 进制")]),a._v(" "),s("ul",[s("li",[a._v("二进制：0,1 满2进1，以 0b 或者 0B 开头")]),a._v(" "),s("li",[a._v("八进制：满10进1")]),a._v(" "),s("li",[a._v("十进制：满8进1，以数字0开头")]),a._v(" "),s("li",[a._v("十六进制：满16进1，以0x或者0X开头。此处的A-F不区分大小写。 如：0x21AF + 1 = 0x21B0")])])])}),[],!1,null,null,null);t.default=r.exports}}]);